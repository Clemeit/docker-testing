{"version":3,"sources":["components/global/NoMobileOptimization.jsx","components/global/CharacterSelectModal.jsx","components/global/RegistrationList.jsx","components/global/CharacterRegistration.jsx"],"names":["NoMobileOptimization","props","className","style","display","flexDirection","justifyContent","width","fontSize","lineHeight","color","textAlign","verticalAlign","CharacterSelectModal","React","useState","lookupError","setLookupError","errorTitle","setErrorTitle","errorMessage","setErrorMessage","isLoading","setIsLoading","name","setName","server","setServer","getCharacterHash","test","length","Post","trim","then","res","playerid","Log","submit","error","catch","finally","useEffect","document","getElementById","focus","lastServer","$","on","e","key","close","unbind","onClick","position","top","right","cursor","PageMessage","type","title","message","characterExists","id","disabled","value","onChange","target","onKeyDown","padding","SERVER_LIST","map","marginLeft","minWidth","marginTop","RegistrationList","characterIds","setCharacterIds","characters","setCharacters","characterSelectModalShown","setCharacterSelectModalShown","setLastServer","setCharacterExists","loading","setLoading","loadingNewCharacter","setLoadingNewCharacter","showFailedToFetchError","setShowFailedToFetchError","registeredCharacters","JSON","parse","localStorage","getItem","refreshButtonAngleRef","useRef","refreshCharacters","setItem","stringify","playerids","response","sortedCharacters","forEach","characterId","push","filter","character","PlayerId","getClassString","classes","Classes","cls","Name","Level","join","getStatusIndicatorColor","Anonymous","Online","atCharacterLimit","to","submessage","pushBottom","serverName","includes","addCharacter","i","alignItems","marginBottom","backgroundColor","height","borderRadius","marginRight","index","_","current","css","transform","fontWeight","Server","TotalLevel","Guild","Location","opacity","margin","minHeight","CharacterRegistration","disclaimerVisible","setDisclaimerVisible","mayVote","setMayVote","hasVoted","setHasVoted","voteResponse","setVoteResponse","vote","Submit","Date","ls","Helmet","content","property","Banner","small","showTitle","showSubtitle","showButtons","hideOnMobile","hideVote","subtitle","BannerMessage","page","ContentCluster","description","altTitle","noLink","noFade"],"mappings":"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","file":"static/js/5.4b01b622.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ReactComponent as WarningSVG } from \"../../assets/global/warning.svg\";\r\n\r\nconst NoMobileOptimization = (props) => {\r\n  return (\r\n    <div\r\n      className=\"show-on-mobile\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          fontSize: \"1.5rem\",\r\n          lineHeight: \"normal\",\r\n          color: \"var(--text-faded)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <WarningSVG style={{ verticalAlign: \"top\" }} />\r\n        This page is not optimized for mobile browsing.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMobileOptimization;\r\n","import React from \"react\";\r\nimport { ReactComponent as CloseSVG } from \"../../assets/global/close.svg\";\r\nimport { Log } from \"../../services/CommunicationService\";\r\nimport { Post } from \"../../services/DataLoader\";\r\nimport PageMessage from \"./PageMessage\";\r\nimport $ from \"jquery\";\r\nimport { SERVER_LIST } from \"../../constants/Servers\";\r\n\r\nconst CharacterSelectModal = (props) => {\r\n  const [lookupError, setLookupError] = React.useState(false);\r\n  const [errorTitle, setErrorTitle] = React.useState(\"\");\r\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [server, setServer] = React.useState(\"Argonnessen\");\r\n\r\n  function getCharacterHash() {\r\n    if (isLoading) return;\r\n    if (!name || !server) {\r\n      setErrorTitle(\"Invalid input\");\r\n      setErrorMessage(\"Please enter a name and server.\");\r\n      setLookupError(true);\r\n      return;\r\n    }\r\n    let validString = /^[a-zA-Z0-9\\-]+$/;\r\n    if (!validString.test(name) || name.length === 0 || name.length > 20) {\r\n      setErrorTitle(\"Invalid input\");\r\n      setErrorMessage(\"Please enter a valid name and server.\");\r\n      setLookupError(true);\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    Post(\r\n      \"https://api.ddoaudit.com/players/lookup\",\r\n      { name: name.trim(), server: server },\r\n      10000\r\n    )\r\n      .then((res) => {\r\n        if (res.playerid) {\r\n          Log(\"Registered character\", `${name.trim()}, ${server}`);\r\n          props.submit(res.playerid, server);\r\n        } else if (res.error === \"Anonymous\") {\r\n          Log(\r\n            \"Character registration failed\",\r\n            `Anonymous: ${name.trim()}, ${server}`\r\n          );\r\n          setErrorTitle(\"Character is anonymous\");\r\n          setErrorMessage(\r\n            \"That character is anonymous. Turn off anonymous for at least 1 minute and then try again.\"\r\n          );\r\n          setLookupError(true);\r\n        } else {\r\n          Log(\r\n            \"Character registration failed\",\r\n            `Not found: ${name.trim()}, ${server}`\r\n          );\r\n          setErrorTitle(\"Character not found or is anonymous\");\r\n          setErrorMessage(\r\n            \"Check that the name and server are correct, and ensure that the character is not marked as anonymous.\"\r\n          );\r\n          setLookupError(true);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        Log(\"Character registration failed\", \"Timeout\");\r\n        setErrorTitle(\"Failed to fetch character data\");\r\n        setErrorMessage(\r\n          \"The server took too long to respond. Please try again later.\"\r\n        );\r\n        setLookupError(true);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    document.getElementById(\"name-input\").focus();\r\n    if (props.lastServer) {\r\n      setServer(props.lastServer);\r\n    }\r\n\r\n    $(document).on(\"keydown.handleEscape\", function (e) {\r\n      if (e.key === \"Escape\") {\r\n        props.close();\r\n      }\r\n    });\r\n\r\n    return () => $(document).unbind(\"keydown.handleEscape\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"absolute-center\">\r\n      <div className=\"overlay\" onClick={() => props.close()} />\r\n      <div className=\"popup-message fullscreen\">\r\n        <CloseSVG\r\n          className=\"link-icon should-invert\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"5px\",\r\n            right: \"5px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => props.close()}\r\n        />\r\n        <h2>Add Character</h2>\r\n        {lookupError && (\r\n          <PageMessage\r\n            type=\"error\"\r\n            title={errorTitle}\r\n            message={errorMessage}\r\n            fontSize={1.1}\r\n          />\r\n        )}\r\n        {props.characterExists && !lookupError && (\r\n          <PageMessage\r\n            type=\"warning\"\r\n            title=\"Duplicate entry\"\r\n            message=\"This character is already registered.\"\r\n            fontSize={1.1}\r\n          />\r\n        )}\r\n        <label\r\n          style={{\r\n            fontSize: \"1.2rem\",\r\n            color: \"var(--text-faded)\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          Name\r\n          <input\r\n            id=\"name-input\"\r\n            disabled={isLoading}\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              setLookupError(false);\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                document.getElementById(\"server-select-field\").focus();\r\n              }\r\n            }}\r\n          />\r\n        </label>\r\n        <label\r\n          style={{\r\n            fontSize: \"1.2rem\",\r\n            color: \"var(--text-faded)\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          Server\r\n          <select\r\n            id=\"server-select-field\"\r\n            disabled={isLoading}\r\n            style={{ fontSize: \"1.3rem\", padding: \"5px 1px\" }}\r\n            value={server}\r\n            onChange={(e) => {\r\n              setServer(e.target.value);\r\n              setLookupError(false);\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                getCharacterHash();\r\n              }\r\n            }}\r\n          >\r\n            {SERVER_LIST.map((server) => (\r\n              <option value={server} key={server}>\r\n                {server}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <div\r\n          className={`primary-button should-invert${\r\n            isLoading ? \" disabled\" : \"\"\r\n          }`}\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            minWidth: \"100px\",\r\n            textAlign: \"center\",\r\n            marginTop: \"10px\",\r\n          }}\r\n          onClick={() => getCharacterHash()}\r\n        >\r\n          {isLoading ? \"Searching...\" : \"Add\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterSelectModal;\r\n","import React from \"react\";\r\nimport CharacterSelectModal from \"./CharacterSelectModal\";\r\nimport { ReactComponent as DeleteSVG } from \"../../assets/global/delete.svg\";\r\nimport { ReactComponent as RefreshSVG } from \"../../assets/global/refresh.svg\";\r\nimport { Post } from \"../../services/DataLoader\";\r\nimport $ from \"jquery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageMessage from \"./PageMessage\";\r\n\r\nconst RegistrationList = (props) => {\r\n  const CHARACTER_LIMIT = 15;\r\n\r\n  const [characterIds, setCharacterIds] = React.useState(null);\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [characterSelectModalShown, setCharacterSelectModalShown] =\r\n    React.useState(false);\r\n  const [lastServer, setLastServer] = React.useState(\"Argonnessen\");\r\n  const [characterExists, setCharacterExists] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [loadingNewCharacter, setLoadingNewCharacter] = React.useState(false);\r\n  const [showFailedToFetchError, setShowFailedToFetchError] =\r\n    React.useState(false);\r\n\r\n  function addCharacter(characterId) {\r\n    setLoadingNewCharacter(true);\r\n    if (characterIds != null && characterIds.includes(characterId)) {\r\n      setCharacterExists(true);\r\n      return;\r\n    }\r\n    setCharacterExists(false);\r\n    setCharacterIds((characterIds) => [...(characterIds || []), characterId]);\r\n    setCharacterSelectModalShown(false);\r\n  }\r\n\r\n  function removeCharacter(index) {\r\n    setLoadingNewCharacter(true);\r\n    setCharacterIds((characterIds) =>\r\n      characterIds.filter((_, i) => i != index)\r\n    );\r\n  }\r\n\r\n  function clearRegisteredCharacters() {\r\n    setCharacterIds([]);\r\n    localStorage.setItem(\"registered-characters\", \"[]\");\r\n    window.location.reload();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    let registeredCharacters = JSON.parse(\r\n      localStorage.getItem(\"registered-characters\") || \"[]\"\r\n    );\r\n    if (registeredCharacters.length) {\r\n      setCharacterIds(registeredCharacters);\r\n    }\r\n  }, []);\r\n\r\n  const refreshButtonAngleRef = React.useRef(null);\r\n  function refreshButtonHandler() {\r\n    refreshButtonAngleRef.current += 360;\r\n    $(`.character-refresh-button`).css({\r\n      transform: `rotate(${refreshButtonAngleRef.current}deg)`,\r\n    });\r\n  }\r\n\r\n  function refreshCharacters() {\r\n    // lookup each character by ID and populate 'characters' list\r\n    setLoading(true);\r\n    localStorage.setItem(\"registered-characters\", JSON.stringify(characterIds));\r\n\r\n    Post(\r\n      \"https://api.ddoaudit.com/players/lookup\",\r\n      { playerids: characterIds },\r\n      10000\r\n    )\r\n      .then((response) => {\r\n        if (response.error) {\r\n          setCharacters([]);\r\n        } else {\r\n          let sortedCharacters = [];\r\n          if (characterIds != null) {\r\n            characterIds.forEach((characterId) => {\r\n              sortedCharacters.push(\r\n                response.filter(\r\n                  (character) => character.PlayerId === characterId\r\n                )?.[0]\r\n              );\r\n            });\r\n          }\r\n          setCharacters(sortedCharacters);\r\n        }\r\n      })\r\n      .catch(() => setShowFailedToFetchError(true))\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setLoadingNewCharacter(false);\r\n      });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (characterIds) {\r\n      if (characterIds.length) {\r\n        setLoading(true);\r\n        refreshCharacters();\r\n      } else {\r\n        localStorage.setItem(\"registered-characters\", \"[]\");\r\n        setCharacters([]);\r\n        setLoading(false);\r\n        setLoadingNewCharacter(false);\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      setLoadingNewCharacter(false);\r\n    }\r\n  }, [characterIds]);\r\n\r\n  function getClassString(character) {\r\n    let classes = [];\r\n    character?.Classes?.forEach((cls) => {\r\n      if (cls.Name != null && cls.Name != \"Epic\" && cls.Name != \"Legendary\") {\r\n        classes.push(`${cls.Name} ${cls.Level}`);\r\n      }\r\n    });\r\n    return classes.join(\", \");\r\n  }\r\n\r\n  function getStatusIndicatorColor(character) {\r\n    if (!character) return \"blue\";\r\n    if (character.Anonymous) {\r\n      return \"blue\";\r\n    } else {\r\n      return character.Online ? \"green\" : \"red\";\r\n    }\r\n  }\r\n\r\n  function atCharacterLimit() {\r\n    if (characterIds == null) return false;\r\n    return characterIds.length >= CHARACTER_LIMIT;\r\n  }\r\n\r\n  function hasCharacters() {\r\n    return characters && characters.length > 0;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showFailedToFetchError && (\r\n        <PageMessage\r\n          type=\"error\"\r\n          title=\"Failed to fetch character data\"\r\n          message={\r\n            <>\r\n              Please try again later. If the error persists, try clearing your\r\n              browser cookies or let me know of the problem via the{\" \"}\r\n              <Link to=\"/suggestions\">Suggestions page</Link>.\r\n            </>\r\n          }\r\n          submessage=\"Reason: the server took too long to respond\"\r\n          fontSize={1.3}\r\n          pushBottom={true}\r\n        />\r\n      )}\r\n      {characterSelectModalShown && (\r\n        <CharacterSelectModal\r\n          lastServer={lastServer}\r\n          submit={(characterId, serverName) => {\r\n            addCharacter(characterId);\r\n            setLastServer(serverName);\r\n          }}\r\n          close={() => setCharacterSelectModalShown(false)}\r\n          characterExists={characterExists}\r\n        />\r\n      )}\r\n      <div>\r\n        {characters &&\r\n          characters.length > 0 &&\r\n          characters.map((character, i) => (\r\n            <div key={i}>\r\n              {character && (\r\n                <div style={{ padding: \"10px 0px\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: getStatusIndicatorColor(character),\r\n                        width: \"13px\",\r\n                        height: \"13px\",\r\n                        borderRadius: \"100%\",\r\n                        marginRight: \"7px\",\r\n                      }}\r\n                    />\r\n                    <h4\r\n                      style={{\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                    >\r\n                      {character.Name}\r\n                    </h4>\r\n                    <DeleteSVG\r\n                      className=\"nav-icon should-invert\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => removeCharacter(i)}\r\n                    />\r\n                    <RefreshSVG\r\n                      className=\"nav-icon should-invert character-refresh-button\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        refreshCharacters(i);\r\n                        refreshButtonHandler();\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <table\r\n                    className=\"character-table\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <thead>\r\n                      <tr\r\n                        style={{\r\n                          color: \"var(--text-faded)\",\r\n                          fontWeight: \"bold\",\r\n                          fontSize: \"1.2rem\",\r\n                          lineHeight: \"15px\",\r\n                        }}\r\n                      >\r\n                        <th\r\n                          style={{\r\n                            width: \"10%\",\r\n                          }}\r\n                        >\r\n                          Server\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            width: \"10%\",\r\n                          }}\r\n                        >\r\n                          Level\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            width: \"20%\",\r\n                          }}\r\n                        >\r\n                          Guild\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            width: \"30%\",\r\n                          }}\r\n                        >\r\n                          Classes\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            width: \"30%\",\r\n                          }}\r\n                        >\r\n                          Location\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr\r\n                        style={{\r\n                          fontSize: \"1.4rem\",\r\n                        }}\r\n                      >\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"top\",\r\n                          }}\r\n                        >\r\n                          {character.Server}\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"top\",\r\n                          }}\r\n                        >\r\n                          {character.TotalLevel}\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"top\",\r\n                          }}\r\n                        >\r\n                          {character.Guild}\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"top\",\r\n                          }}\r\n                        >\r\n                          {getClassString(character)}\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"top\",\r\n                          }}\r\n                        >\r\n                          {character.Location?.Name ||\r\n                            \"Somewhere in the Aether\"}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n              <hr\r\n                style={{\r\n                  backgroundColor: \"var(--text)\",\r\n                  opacity: 0.2,\r\n                  margin: \"5px 3px\",\r\n                }}\r\n              />\r\n              {i == characters.length - 1 && <div style={{ height: \"20px\" }} />}\r\n            </div>\r\n          ))}\r\n        {loading && (!hasCharacters() || loadingNewCharacter) && (\r\n          <div\r\n            style={{\r\n              minHeight: \"150px\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <span style={{ textAlign: \"center\", fontSize: \"1.5rem\" }}>\r\n              Loading...\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {!atCharacterLimit() && (\r\n          <div\r\n            className=\"primary-button should-invert\"\r\n            onClick={() => {\r\n              setCharacterSelectModalShown(true);\r\n              setCharacterExists(false);\r\n            }}\r\n          >\r\n            Add Character\r\n          </div>\r\n        )}\r\n        {atCharacterLimit() && (\r\n          <span\r\n            style={{\r\n              fontSize: \"1.3rem\",\r\n              color: \"var(--text-faded)\",\r\n            }}\r\n          >\r\n            Character limit reached. You may have up to {CHARACTER_LIMIT}{\" \"}\r\n            registered characters.\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationList;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Banner from \"./Banner\";\r\nimport { ReactComponent as WarningSVG } from \"../../assets/global/warning.svg\";\r\nimport { ReactComponent as TimerSVG } from \"../../assets/global/timer.svg\";\r\nimport { ReactComponent as ThumbsDownSVG } from \"../../assets/global/thumbs_down.svg\";\r\nimport { ReactComponent as ThumbsUpSVG } from \"../../assets/global/thumbs_up.svg\";\r\nimport { ReactComponent as CloseSVG } from \"../../assets/global/close.svg\";\r\nimport BannerMessage from \"./BannerMessage\";\r\nimport ContentCluster from \"./ContentCluster\";\r\nimport RegistrationList from \"./RegistrationList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoMobileOptimization from \"./NoMobileOptimization\";\r\nimport { Submit } from \"../../services/CommunicationService\";\r\nimport { Log } from \"../../services/CommunicationService\";\r\n\r\nconst CharacterRegistration = () => {\r\n  const TITLE = \"DDO Audit Character Registration\";\r\n  const [disclaimerVisible, setDisclaimerVisible] = React.useState(false);\r\n  const [mayVote, setMayVote] = React.useState(false);\r\n  const [hasVoted, setHasVoted] = React.useState(false);\r\n  const [voteResponse, setVoteResponse] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"hide-character-registration-disclaimer\")) {\r\n      setDisclaimerVisible(false);\r\n    } else {\r\n      setDisclaimerVisible(true);\r\n    }\r\n\r\n    let ls = localStorage.getItem(\"feature-vote-character-registration\");\r\n    let registeredCharacters = JSON.parse(\r\n      localStorage.getItem(\"registered-characters\") || \"[]\"\r\n    );\r\n    if (registeredCharacters.length > 0 && ls == null) {\r\n      setMayVote(true);\r\n    }\r\n  }, []);\r\n\r\n  function vote(response) {\r\n    if (response != null) {\r\n      Submit(\"Feature: Character Registration\", response);\r\n      if (response === \"Like\") {\r\n        setVoteResponse(\"positive\");\r\n      } else {\r\n        setVoteResponse(\"negative\");\r\n      }\r\n    } else {\r\n      setVoteResponse(\"close\");\r\n      setMayVote(false);\r\n    }\r\n    setHasVoted(true);\r\n    localStorage.setItem(\"feature-vote-character-registration\", new Date());\r\n  }\r\n\r\n  function dismissDisclaimer() {\r\n    setDisclaimerVisible(false);\r\n    localStorage.setItem(\"hide-character-registration-disclaimer\", true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{TITLE}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Register a list of your characters for automatic LFM filtering and raid timer tracking.\"\r\n        />\r\n        <meta property=\"og:image\" content=\"/icons/grouping-512px.png\" />\r\n        <meta property=\"og:site_name\" content=\"DDO Audit\" />\r\n        <meta property=\"twitter:image\" content=\"/icons/grouping-512px.png\" />\r\n      </Helmet>\r\n      <Banner\r\n        small={true}\r\n        showTitle={true}\r\n        showSubtitle={true}\r\n        showButtons={false}\r\n        hideOnMobile={true}\r\n        hideVote={true}\r\n        title=\"Characters\"\r\n        subtitle=\"Character Registration\"\r\n      />\r\n      <div className=\"content-container\">\r\n        <BannerMessage page=\"registration\" />\r\n        <div className=\"top-content-padding shrink-on-mobile\" />\r\n        <NoMobileOptimization />\r\n        <ContentCluster\r\n          title=\"Characters\"\r\n          description=\"Register your characters and we'll automatically keep track of your raid timers and filter the LFM panel based on your characters' current levels.\"\r\n        >\r\n          <RegistrationList />\r\n          {mayVote && (\r\n            <div\r\n              className=\"feature-vote-container\"\r\n              style={{ opacity: hasVoted ? 1 : \"\" }}\r\n            >\r\n              {hasVoted ? (\r\n                <>\r\n                  <span style={{ cursor: \"default\" }}>\r\n                    {voteResponse === \"positive\" ? (\r\n                      \"That's great to hear! Thanks.\"\r\n                    ) : (\r\n                      <>\r\n                        Have a moment to{\" \"}\r\n                        <Link to=\"/suggestions\">suggest an improvement</Link>?\r\n                      </>\r\n                    )}\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span style={{ cursor: \"default\" }}>\r\n                    Is this feature easy to use?\r\n                  </span>\r\n                  <ThumbsUpSVG\r\n                    className=\"nav-icon should-invert\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => vote(\"Like\")}\r\n                  />\r\n                  <ThumbsDownSVG\r\n                    className=\"nav-icon should-invert\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => vote(\"Dislike\")}\r\n                  />\r\n                  <CloseSVG\r\n                    className=\"nav-icon should-invert\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => vote(null)}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </ContentCluster>\r\n        {disclaimerVisible && (\r\n          <ContentCluster\r\n            title={\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  lineHeight: \"30px\",\r\n                }}\r\n              >\r\n                <WarningSVG\r\n                  style={{\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                />\r\n                Please Note\r\n              </div>\r\n            }\r\n            altTitle=\"Please Note\"\r\n            noLink={true}\r\n            description={\r\n              <span>\r\n                <p>\r\n                  Anonymous characters must turn off 'Anonymous' for at least 1\r\n                  minute before being registered, but may return to being\r\n                  anonymous afterwards. Characters marked as anonymous will not\r\n                  show online/offline status and will have their guild name and\r\n                  location redacted.\r\n                </p>\r\n                <p>\r\n                  <span className=\"lfm-number\">\r\n                    We will never ask for your username, password, or personal\r\n                    data.\r\n                  </span>{\" \"}\r\n                  Please do not share this type of information with us.\r\n                </p>\r\n              </span>\r\n            }\r\n            noFade={true}\r\n          >\r\n            <div\r\n              className=\"secondary-button should-invert\"\r\n              onClick={() => {\r\n                dismissDisclaimer();\r\n                Log(\"Dismissed disclaimer\", \"Character registration\");\r\n              }}\r\n            >\r\n              Dismiss\r\n            </div>\r\n          </ContentCluster>\r\n        )}\r\n        <ContentCluster title=\"See Also...\">\r\n          <div className=\"content-cluster-options\">\r\n            <Link\r\n              to=\"/timers\"\r\n              className=\"nav-box shrinkable\"\r\n              style={{\r\n                height: \"auto\",\r\n                minHeight: \"150px\",\r\n              }}\r\n            >\r\n              <div className=\"nav-box-title\">\r\n                <TimerSVG className=\"nav-icon should-invert\" />\r\n                <h2 className=\"content-option-title\">Raid Timers</h2>\r\n              </div>\r\n              <p className=\"content-option-description\">\r\n                View and manage your current raid timers.\r\n              </p>\r\n            </Link>\r\n          </div>\r\n        </ContentCluster>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterRegistration;\r\n"],"sourceRoot":""}