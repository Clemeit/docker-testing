{"version":3,"sources":["components/global/NoMobileOptimization.jsx","components/trends/Trends.jsx"],"names":["NoMobileOptimization","props","className","style","display","flexDirection","justifyContent","width","fontSize","lineHeight","color","textAlign","verticalAlign","Trends","DAY_ONLY","weekday","year","month","day","React","useState","population1Year","setPopulation1Year","permanentVsHardcore1Year","setPermanentVsHardcore1Year","minsAndMaxes1Year","setMinsAndMaxes1Year","minsAndMaxesQuarter","setMinsAndMaxesQuarter","quarterDelta","setQuarterDelta","markedEvents","setMarkedEvents","quarterDeltaType","setQuarterDeltaType","useEffect","Fetch","then","val","catch","err","dataFailedToLoad","filter","series","id","popupMessage","setPopupMessage","name","content","property","small","showTitle","showSubtitle","showButtons","hideOnMobile","hideVote","title","subtitle","page","message","popMessage","classification","description","data","trendType","activeFilter","showActions","showLastUpdated","reportReference","marginBottom","height","forceHardcore","dateOptions","showArea","areaOpacity","onClick","Log","icon","fullscreen","altTitle","yMin","curve"],"mappings":"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","file":"static/js/7.79b54337.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ReactComponent as WarningSVG } from \"../../assets/global/warning.svg\";\r\n\r\nconst NoMobileOptimization = (props) => {\r\n  return (\r\n    <div\r\n      className=\"show-on-mobile\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          fontSize: \"1.5rem\",\r\n          lineHeight: \"normal\",\r\n          color: \"var(--text-faded)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <WarningSVG style={{ verticalAlign: \"top\" }} />\r\n        This page is not optimized for mobile browsing.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMobileOptimization;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Banner from \"../global/Banner\";\r\nimport { Fetch } from \"../../services/DataLoader\";\r\nimport BannerMessage from \"../global/BannerMessage\";\r\nimport NoMobileOptimization from \"../global/NoMobileOptimization\";\r\nimport ChartLine from \"../global/ChartLine\";\r\nimport ContentCluster from \"../global/ContentCluster\";\r\nimport { Log } from \"../../services/CommunicationService\";\r\nimport PopupMessage from \"../global/PopupMessage\";\r\nimport DataClassification from \"../global/DataClassification\";\r\n\r\nconst Trends = (props) => {\r\n  const TITLE = \"DDO Population Data Trends\";\r\n\r\n  const DAY_ONLY = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  const [population1Year, setPopulation1Year] = React.useState(null);\r\n  const [permanentVsHardcore1Year, setPermanentVsHardcore1Year] =\r\n    React.useState(null);\r\n  const [minsAndMaxes1Year, setMinsAndMaxes1Year] = React.useState(null);\r\n  const [minsAndMaxesQuarter, setMinsAndMaxesQuarter] = React.useState(null);\r\n  const [quarterDelta, setQuarterDelta] = React.useState(null);\r\n\r\n  const [markedEvents, setMarkedEvents] = React.useState(null);\r\n\r\n  const [quarterDeltaType, setQuarterDeltaType] = React.useState(\"population\");\r\n\r\n  React.useEffect(() => {\r\n    Fetch(\r\n      `https://api.ddoaudit.com/population/quarter${\r\n        quarterDeltaType === \"population\" ? \"\" : \"_groups\"\r\n      }_delta`,\r\n      5000\r\n    )\r\n      .then((val) => {\r\n        setQuarterDelta(val);\r\n      })\r\n      .catch((err) => {\r\n        dataFailedToLoad();\r\n      });\r\n  }, [quarterDeltaType]);\r\n\r\n  React.useEffect(() => {\r\n    Fetch(\"https://api.ddoaudit.com/population/year\", 5000).then((val) => {\r\n      setPopulation1Year(\r\n        val.filter(\r\n          (series) =>\r\n            series.id !== \"Total\" &&\r\n            series.id !== \"Permanent\" &&\r\n            series.id !== \"Minimum\" &&\r\n            series.id !== \"Maximum\"\r\n        )\r\n      );\r\n      setPermanentVsHardcore1Year(\r\n        val.filter(\r\n          (series) =>\r\n            series.id === \"Permanent\" ||\r\n            series.id === \"Hardcore\" ||\r\n            series.id === \"Total\"\r\n        )\r\n      );\r\n      setMinsAndMaxes1Year(\r\n        val.filter(\r\n          (series) =>\r\n            series.id === \"Total\" ||\r\n            series.id === \"Minimum\" ||\r\n            series.id === \"Maximum\"\r\n        )\r\n      );\r\n    });\r\n\r\n    Fetch(\"https://api.ddoaudit.com/population/quarter\", 5000).then((val) => {\r\n      setMinsAndMaxesQuarter(\r\n        val.filter(\r\n          (series) =>\r\n            series.id === \"Total\" ||\r\n            series.id === \"Minimum\" ||\r\n            series.id === \"Maximum\"\r\n        )\r\n      );\r\n    });\r\n\r\n    Fetch(\"https://api.ddoaudit.com/markedevents\", 5000).then((val) => {\r\n      setMarkedEvents(val);\r\n    });\r\n\r\n    Fetch(\"https://api.ddoaudit.com/population/quarter_delta\", 5000).then(\r\n      (val) => {\r\n        setQuarterDelta(val);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  function readAbout(r, callback) {\r\n    switch (r) {\r\n      case \"ignoring downtimes\":\r\n        Log(\"Read about downtimes\", \"Trends\");\r\n        setPopupMessage({\r\n          title: \"Dowtimes\",\r\n          message: (\r\n            <span>\r\n              We attempt to filter out downtimes from this report by doing the\r\n              following:\r\n              <ul>\r\n                <li>Ignoring times with zero population</li>\r\n                <li>Ignoring data for one hour after a known downtime</li>\r\n              </ul>\r\n              <p>\r\n                It's not a science. There's still obviously a lot of volatility\r\n                in the data and this may be improved upon in the future.\r\n              </p>\r\n            </span>\r\n          ),\r\n          icon: \"info\",\r\n          fullscreen: true,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  var [popupMessage, setPopupMessage] = React.useState(null);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{TITLE}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"DDO's population trends over the last year. View permanent servers' and Hardcore League's population over time. See how each update has effected the population.\"\r\n        />\r\n        <meta\r\n          property=\"og:image\"\r\n          content=\"/icons/logo-512px.png\"\r\n          data-react-helmet=\"true\"\r\n        />\r\n        <meta\r\n          property=\"twitter:image\"\r\n          content=\"/icons/logo-512px.png\"\r\n          data-react-helmet=\"true\"\r\n        />\r\n      </Helmet>\r\n      <Banner\r\n        small={true}\r\n        showTitle={true}\r\n        showSubtitle={true}\r\n        showButtons={false}\r\n        hideOnMobile={true}\r\n        hideVote={true}\r\n        title=\"Trends\"\r\n        subtitle=\"Long-term Population Trends\"\r\n      />\r\n      <PopupMessage\r\n        page=\"trends\"\r\n        message={popupMessage}\r\n        popMessage={() => {\r\n          setPopupMessage(null);\r\n        }}\r\n      />\r\n      <div className=\"content-container\">\r\n        <BannerMessage page=\"trends\" />\r\n        <DataClassification classification=\"mixed\" />\r\n        <div className=\"top-content-padding-small shrink-on-mobile\" />\r\n        <NoMobileOptimization />\r\n        <ContentCluster\r\n          title=\"Server Population Trends\"\r\n          description=\"Data for each server displayed as weekly averages. All server downtimes are ignored.\"\r\n        >\r\n          <ChartLine\r\n            data={population1Year}\r\n            trendType=\"annual\"\r\n            activeFilter=\"Server Activity\"\r\n            showActions={false}\r\n            showLastUpdated={true}\r\n            reportReference={null}\r\n            marginBottom={120}\r\n            height=\"460px\"\r\n            forceHardcore={true}\r\n            markedEvents={markedEvents}\r\n            dateOptions={DAY_ONLY}\r\n          />\r\n        </ContentCluster>\r\n        <ContentCluster\r\n          title=\"Permanent Servers vs. Hardcore League\"\r\n          description=\"Data displayed as a total of all servers, total of the permanent servers, and Hardcore League server only. All server downtimes are ignored.\"\r\n        >\r\n          <ChartLine\r\n            data={permanentVsHardcore1Year}\r\n            trendType=\"annual\"\r\n            activeFilter=\"Server Activity\"\r\n            showActions={false}\r\n            showLastUpdated={true}\r\n            reportReference={null}\r\n            marginBottom={120}\r\n            height=\"460px\"\r\n            showArea={true}\r\n            areaOpacity={0.1}\r\n            forceHardcore={true}\r\n            markedEvents={markedEvents}\r\n            dateOptions={DAY_ONLY}\r\n          />\r\n        </ContentCluster>\r\n        <ContentCluster\r\n          title=\"Weekly Minimum and Maximum Population\"\r\n          description={\r\n            <span>\r\n              Data displayed as weekly minimums, maximums, and averages.\r\n              Downtimes are mostly ignored{\" \"}\r\n              <span\r\n                className=\"faux-link\"\r\n                onClick={() => readAbout(\"ignoring downtimes\")}\r\n              >\r\n                (read more)\r\n              </span>\r\n              .\r\n            </span>\r\n          }\r\n        >\r\n          <ChartLine\r\n            data={minsAndMaxes1Year}\r\n            trendType=\"annual\"\r\n            activeFilter=\"Server Activity\"\r\n            showActions={false}\r\n            showLastUpdated={true}\r\n            reportReference={null}\r\n            marginBottom={120}\r\n            height=\"460px\"\r\n            showArea={false}\r\n            areaOpacity={0.1}\r\n            forceHardcore={true}\r\n            markedEvents={markedEvents}\r\n            dateOptions={DAY_ONLY}\r\n          />\r\n        </ContentCluster>\r\n        <ContentCluster\r\n          title={`Server ${\r\n            quarterDeltaType === \"population\" ? \"Population\" : \"LFM Count\"\r\n          } Delta`}\r\n          altTitle=\"Server Delta\"\r\n          description={\r\n            <span>\r\n              <span>\r\n                The last quater of{\" \"}\r\n                {quarterDeltaType === \"population\" ? \"population\" : \"LFM count\"}{\" \"}\r\n                delta. Weekly percent changes are shown.\r\n              </span>\r\n              <br />\r\n              <span\r\n                className=\"faux-link\"\r\n                onClick={() => {\r\n                  setQuarterDeltaType(\r\n                    quarterDeltaType === \"population\" ? \"groups\" : \"population\"\r\n                  );\r\n                  Log(\"Switched between population/LFMs\", \"Trends delta chart\");\r\n                }}\r\n              >\r\n                Click here to switch to{\" \"}\r\n                {quarterDeltaType === \"population\" ? \"LFM\" : \"population\"} data\r\n              </span>\r\n            </span>\r\n          }\r\n        >\r\n          <ChartLine\r\n            data={quarterDelta}\r\n            trendType=\"quarter\"\r\n            activeFilter=\"Server Activity\"\r\n            showActions={false}\r\n            showLastUpdated={true}\r\n            reportReference={null}\r\n            marginBottom={120}\r\n            height=\"460px\"\r\n            markedEvents={markedEvents}\r\n            showArea={true}\r\n            yMin={\"auto\"}\r\n            curve=\"linear\"\r\n            dateOptions={DAY_ONLY}\r\n          />\r\n        </ContentCluster>\r\n        <ContentCluster\r\n          title=\"Daily Minimum and Maximum Population\"\r\n          description=\"The last quarter of trend data displayed as daily minimums, maximums, and averages.\"\r\n        >\r\n          <ChartLine\r\n            data={minsAndMaxesQuarter}\r\n            trendType=\"quarter\"\r\n            activeFilter=\"Server Activity\"\r\n            showActions={false}\r\n            showLastUpdated={true}\r\n            reportReference={null}\r\n            marginBottom={120}\r\n            height=\"460px\"\r\n            showArea={false}\r\n            areaOpacity={0.1}\r\n            forceHardcore={true}\r\n            markedEvents={markedEvents}\r\n            dateOptions={DAY_ONLY}\r\n          />\r\n        </ContentCluster>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trends;\r\n"],"sourceRoot":""}