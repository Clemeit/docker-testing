{"version":3,"sources":["components/global/NoMobileOptimization.jsx","components/global/YesNoModal.jsx","components/timers/TimerList.jsx","components/timers/Timers.jsx"],"names":["NoMobileOptimization","props","className","style","display","flexDirection","justifyContent","width","fontSize","lineHeight","color","textAlign","verticalAlign","YesNoModal","onClick","close","maxWidth","position","top","right","cursor","title","message","gap","marginLeft","minWidth","marginTop","yes","no","TimerList","React","useState","characterIds","setCharacterIds","characters","setCharacters","loading","setLoading","showFailedToFetchError","setShowFailedToFetchError","showYesNoModal","setShowYesNoModal","selectedTimerId","setSelectedTimerId","hiddenTimerIds","setHiddenTimerIds","useEffect","JSON","parse","localStorage","getItem","fetchCharacterData","appendRaidActivity","refreshButtonAngleRef","useRef","length","Post","playerids","then","response","error","Log","catch","returnedCharacters","lookups","forEach","character","push","playerid","PlayerId","res","RaidActivity","Name","Promise","all","filter","raid","remaining","sort","a","b","raids","i","includes","name","_","index","id","getTimeTillEnd","remainingMinutes","timeInDays","Math","floor","timeInHours","timeInMinutes","returnStringArray","join","$","document","on","e","key","unbind","setItem","stringify","removeRaidTimer","PageMessage","type","to","submessage","pushBottom","map","padding","alignItems","marginBottom","marginRight","Server","current","css","transform","fontWeight","ri","backgroundColor","opacity","margin","height","minHeight","Timers","disclaimerVisible","setDisclaimerVisible","mayVote","setMayVote","hasVoted","setHasVoted","voteResponse","setVoteResponse","vote","Submit","Date","ls","Helmet","content","property","Banner","small","showTitle","showSubtitle","showButtons","hideOnMobile","hideVote","subtitle","BannerMessage","page","DataClassification","classification","ContentCluster","description","noLink","noFade"],"mappings":"wGAAA,wBA6BeA,IA1Bc,SAACC,GAC5B,OACE,qBACEC,UAAU,iBACVC,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,MAAO,QANX,SASE,oBACEJ,MAAO,CACLK,SAAU,SACVC,WAAY,SACZC,MAAO,oBACPC,UAAW,UALf,UAQE,cAAC,IAAD,CAAYR,MAAO,CAAES,cAAe,SARtC,yD,yNCgDSC,EA3DI,SAACZ,GAClB,OACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAUY,QAAS,kBAAMb,EAAMc,WAC9C,sBACEb,UAAU,2BACVC,MAAO,CAAEI,MAAO,QAASS,SAAU,OAFrC,UAIE,cAAC,IAAD,CACEd,UAAU,0BACVC,MAAO,CACLc,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,WAEVN,QAAS,kBAAMb,EAAMc,WAEvB,6BAAKd,EAAMoB,OAAS,KACnBpB,EAAMqB,SACL,sBAAMnB,MAAO,CAAEK,SAAU,UAAzB,SAAsCP,EAAMqB,UAE9C,sBACEnB,MAAO,CACLC,QAAS,OACTC,cAAe,MACfkB,IAAK,QAJT,UAOE,qBACErB,UAAW,+BACXC,MAAO,CACLqB,WAAY,OACZC,SAAU,QACVd,UAAW,SACXe,UAAW,QAEbZ,QAAS,kBAAMb,EAAM0B,OARvB,iBAYA,qBACEzB,UAAW,+BACXC,MAAO,CAELsB,SAAU,QACVd,UAAW,SACXe,UAAW,QAEbZ,QAAS,kBAAMb,EAAM2B,MARvB,0BCkWKC,EApYG,WAChB,MAAwCC,IAAMC,SAAS,MAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCH,IAAMC,WAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BL,IAAMC,UAAS,GAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EACEP,IAAMC,UAAS,GADjB,mBAAOO,EAAP,KAA+BC,EAA/B,KAEA,EAA4CT,IAAMC,UAAS,GAA3D,mBAAOS,EAAP,KAAuBC,EAAvB,KACA,EAA8CX,IAAMC,UAAU,GAA9D,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAA4Cb,IAAMC,SAAS,IAA3D,mBAAOa,EAAP,KAAuBC,EAAvB,KAEAf,IAAMgB,WAAU,WACd,IAAId,EAAee,KAAKC,MACtBC,aAAaC,QAAQ,0BAA4B,MAEnDjB,EAAgBD,GAAgB,MAC/B,IAEHF,IAAMgB,WAAU,WACVd,GACFmB,MAED,CAACnB,IAEJF,IAAMgB,WAAU,WACVF,GAAkBV,GACpBkB,EAAmBlB,KAEpB,CAACU,IAEJ,IAAMS,EAAwBvB,IAAMwB,OAAO,MAQ3C,SAASH,IACFnB,GAAwC,IAAxBA,EAAauB,QAIlClB,GAAW,GACXmB,YACE,0CACA,CAAEC,UAAWzB,GACb,KAEC0B,MAAK,SAACC,GACDA,EAASC,OACXvB,GAAW,GACXE,GAA0B,GAC1BsB,YAAI,6BAAD,UAAkCF,EAASC,OAAS,eAEvDzB,EAAcwB,GACdP,EAAmBO,OAGtBG,OAAM,WACLzB,GAAW,GACXE,GAA0B,GAC1BsB,YAAI,6BAA8B,eAtBpCxB,GAAW,GA0Bf,SAASe,EAAmBlB,GACR,MAAdA,GACFC,EAAc,IAEhB,IAAI4B,EAAqB,GACrBC,EAAU,GACd9B,EAAW+B,SAAQ,SAACC,GAClBF,EAAQG,KACNX,YACE,gDACA,CAAEY,SAAUF,EAAUG,UACtB,KAECX,MAAK,SAACY,GACLP,EAAmBI,KAAnB,2BACKD,GADL,IAEEK,aAAcD,QAGjBR,OAAM,WACLzB,GAAW,GACXE,GAA0B,GAC1BwB,EAAmBI,KAAKjC,GACxB2B,YAAI,8BAAD,sBAA+CK,EAAUM,cAK7C,IAAnBR,EAAQT,QACVkB,QAAQC,IAAIV,GAASN,MAAK,WAExBK,EAAmBE,SAAQ,SAACC,GAC1BA,EAAUK,aAAeL,EAAUK,aAAaI,QAC9C,SAACC,GAAD,OAAUA,EAAKC,UAAY,QAK/Bd,EAAmBE,SAAQ,SAACC,GAC1BA,EAAUK,aAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,UAAYG,EAAEH,aAEtD,IADA,IAAII,EAAQ,GAF4B,WAG/BC,GACHD,EAAME,SAASjB,EAAUK,aAAaW,GAAGE,MAC3ClB,EAAUK,aAAeL,EAAUK,aAAaI,QAC9C,SAACU,EAAGC,GAAJ,OAAcJ,GAAKI,KAGrBL,EAAMd,KAAKD,EAAUK,aAAaW,GAAGE,OANhCF,EAAIhB,EAAUK,aAAahB,OAAS,EAAG2B,GAAK,EAAGA,IAAM,EAArDA,MAYXnB,EAAmBE,SAAQ,SAACC,GAC1BA,EAAUK,aAAeL,EAAUK,aAAaI,QAC9C,SAACC,GAAD,OAAWhC,EAAeuC,SAASP,EAAKW,UAI5CxB,EAAmBe,MACjB,SAACC,EAAGC,GAAJ,eAAU,UAAAA,EAAET,oBAAF,eAAgBhB,SAAhB,UAAyBwB,EAAER,oBAA3B,aAAyB,EAAgBhB,WAErDpB,EAAc4B,GACd1B,GAAW,MAKjB,SAASmD,EAAeZ,GAEtB,IAAIa,EAAmBb,EAAKC,UACtBa,EAAaC,KAAKC,MAAMH,EAAgB,OAC9CA,GAAmC,MACnC,IAAMI,EAAcF,KAAKC,MAAMH,EAAgB,MAC/CA,GAAmC,KACnC,IAAMK,EAAgBH,KAAKC,MAAMH,EAAmB,IAChDM,EAAoB,GAexB,OAdkB,GAAdL,GACFK,EAAkB5B,KAAlB,UAA0BuB,EAA1B,eAAyD,GAAdA,EAAkB,IAAM,KAElD,GAAfG,GACFE,EAAkB5B,KAAlB,UACK0B,EADL,gBACuC,GAAfA,EAAmB,IAAM,KAG9B,GAAjBC,GACFC,EAAkB5B,KAAlB,UACK2B,EADL,kBAC6C,GAAjBA,EAAqB,IAAM,KAIlDC,EAAkBC,KAAK,MAkChC,OAfAlE,IAAMgB,WAAU,WACd,IAAMF,EAAiBG,KAAKC,MAC1BC,aAAaC,QAAQ,0BAA4B,MAUnD,OARAL,EAAkBD,GAElBqD,IAAEC,UAAUC,GAAG,wBAAwB,SAAUC,GACjC,WAAVA,EAAEC,KACJ5D,GAAkB,MAIf,kBAAMwD,IAAEC,UAAUI,OAAO,2BAC/B,IAGD,gCACG9D,GACC,cAAC,EAAD,CACEnB,MAAM,0BACNC,QAAQ,oCACRK,IAAK,kBArCb,WACE,GAAuB,MAAnBe,EAAyB,CAC3B,IAAME,EAAiBG,KAAKC,MAC1BC,aAAaC,QAAQ,0BAA4B,MAEnDN,EAAeuB,KAAKzB,GACpBO,aAAasD,QACX,wBACAxD,KAAKyD,UAAU5D,GAAkB,KAEnCC,EAAkBD,GAEpBH,GAAkB,GAClBE,EAAmB,MAwBF8D,IACX7E,GAAI,kBAAMa,GAAkB,IAC5B1B,MAAO,kBAAM0B,GAAkB,MAGlCH,GACC,cAACoE,EAAA,EAAD,CACEC,KAAK,QACLtF,MAAM,iCACNC,QACE,8JAEwD,IACtD,cAAC,IAAD,CAAMsF,GAAG,eAAT,8BAHF,OAMFC,WAAW,8CACXrG,SAAU,IACVsG,YAAY,KAGd1E,IACCE,KACCN,GAAuC,GAAvBA,EAAauB,SAC7B,cAACmD,EAAA,EAAD,CACEC,KAAK,OACLtF,MAAM,2BACNC,QACE,wHAKFd,SAAU,IACVsG,YAAY,IAGjB5E,GACCA,EAAW6E,KAAI,SAAC7C,EAAWgB,GAAZ,OACb,gCACGhB,GACC,mCACE,sBAAK/D,MAAO,CAAE6G,QAAS,YAAvB,UACE,sBACE7G,MAAO,CACLC,QAAS,OACTC,cAAe,MACf4G,WAAY,SACZC,aAAc,QALlB,UAQE,qBACE/G,MAAO,CACL+G,aAAc,MACdC,YAAa,QAHjB,UAMGjD,EAAUM,KAAM,IACjB,uBACErE,MAAO,CACLO,MAAO,qBAFX,eAKKwD,EAAUkD,aAGjB,cAAC,IAAD,CACElH,UAAU,kDACVC,MAAO,CAAEiB,OAAQ,WACjBN,QAAS,WA1O3BuC,EAAsBgE,SAAW,IACjCpB,IAAE,6BAA6BqB,IAAI,CACjCC,UAAU,UAAD,OAAYlE,EAAsBgE,QAAlC,UA0OSlE,WAIJe,EAAUK,cACV,sBACEpE,MAAO,CACLK,SAAU,SACVE,MAAO,qBAHX,SAMG4B,EAAyB,iBAAmB,eAGhD4B,EAAUK,cACwB,GAAjCL,EAAUK,aAAahB,QACrB,sBACEpD,MAAO,CACLK,SAAU,SACVE,MAAO,qBAHX,sCASHwD,EAAUK,cACTL,EAAUK,aAAahB,OAAS,GAC9B,wBACErD,UAAU,kBACVC,MAAO,CACLI,MAAO,QAHX,UAME,gCACE,qBACEJ,MAAO,CACLO,MAAO,oBACP8G,WAAY,OACZhH,SAAU,SACVC,WAAY,QALhB,UAQE,oBACEN,MAAO,CACLI,MAAO,OAFX,kBAOA,oBACEJ,MAAO,CACLI,MAAO,OAFX,mBAOA,oBACEJ,MAAO,CACLI,MAAO,MAFX,yBASJ,gCACG2D,EAAUK,aAAawC,KAAI,SAACnC,EAAM6C,GAAP,OAC1B,qBAEEtH,MAAO,CACLK,SAAU,UAHd,UAME,oBAAIN,UAAU,aAAd,SAA4B0E,EAAKQ,OACjC,6BAAKI,EAAeZ,KACpB,6BACE,cAAC,IAAD,CACE1E,UAAU,cACVY,QAAS,WACP2B,GAAkB,GAClBE,EAAmBiC,EAAKW,WAZzBkC,gBAwBvB,oBACEtH,MAAO,CACLuH,gBAAiB,cACjBC,QAAS,GACTC,OAAQ,aAGX1C,GAAKhD,EAAWqB,OAAS,GAAK,qBAAKpD,MAAO,CAAE0H,OAAQ,YAnI7C3C,MAsIb9C,GAAyB,MAAdF,GACV,qBACE/B,MAAO,CACL2H,UAAW,QACXvH,MAAO,OACPH,QAAS,OACTE,eAAgB,SAChB2G,WAAY,UANhB,SASE,sBAAM9G,MAAO,CAAEQ,UAAW,SAAUH,SAAU,UAA9C,8B,QC/LKuH,UAvLA,SAAC9H,GACd,IACA,EAAkD6B,IAAMC,UAAS,GAAjE,mBAAOiG,EAAP,KAA0BC,EAA1B,KACA,EAA8BnG,IAAMC,UAAS,GAA7C,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAAgCrG,IAAMC,UAAS,GAA/C,mBAAOqG,EAAP,KAAiBC,EAAjB,KACA,EAAwCvG,IAAMC,SAAS,MAAvD,mBAAOuG,EAAP,KAAqBC,EAArB,KAkBA,SAASC,EAAK7E,GACI,MAAZA,GACF8E,YAAO,uBAAwB9E,GAE7B4E,EADe,SAAb5E,EACc,WAEA,cAGlB4E,EAAgB,SAChBJ,GAAW,IAEbE,GAAY,GACZpF,aAAasD,QAAQ,2BAA4B,IAAImC,MAQvD,OArCA5G,IAAMgB,WAAU,WACVG,aAAaC,QAAQ,8BACvB+E,GAAqB,GAErBA,GAAqB,GAGvB,IAAIU,EAAK1F,aAAaC,QAAQ,4BACHH,KAAKC,MAC9BC,aAAaC,QAAQ,0BAA4B,MAE1BK,OAAS,GAAW,MAANoF,GACrCR,GAAW,KAEZ,IAwBD,gCACE,eAACS,EAAA,EAAD,WACE,gCA9CQ,gBA+CR,sBACExD,KAAK,cACLyD,QAAQ,oEAEV,sBACEC,SAAS,WACTD,QAAQ,wBACR,oBAAkB,SAEpB,sBACEC,SAAS,gBACTD,QAAQ,wBACR,oBAAkB,YAGtB,cAACE,EAAA,EAAD,CACEC,OAAO,EACPC,WAAW,EACXC,cAAc,EACdC,aAAa,EACbC,cAAc,EACdC,UAAU,EACVhI,MAAM,cACNiI,SAAS,sBAEX,sBAAKpJ,UAAU,oBAAf,UACE,cAACqJ,EAAA,EAAD,CAAeC,KAAK,WACpB,cAACC,EAAA,EAAD,CAAoBC,eAAe,aACnC,qBAAKxJ,UAAU,+CACf,cAACF,EAAA,EAAD,IACA,eAAC2J,EAAA,EAAD,CACEtI,MAAM,cACNuI,YAAY,wEAFd,UAIE,cAAC,EAAD,IACA,qBAAKzJ,MAAO,CAAEC,QAAS,QAAvB,SACE,cAAC,IAAD,CAAMF,UAAU,+BAA+B0G,GAAG,gBAAlD,iCAIDsB,GACC,qBACEhI,UAAU,yBACVC,MAAO,CAAEwH,QAASS,EAAW,EAAI,IAFnC,SAIGA,EACC,mCACE,sBAAMjI,MAAO,CAAEiB,OAAQ,WAAvB,SACoB,aAAjBkH,EACC,gCAEA,wDACmB,IACjB,cAAC,IAAD,CAAM1B,GAAG,eAAT,oCAFF,WAQN,qCACE,sBAAMzG,MAAO,CAAEiB,OAAQ,WAAvB,qCAGA,cAAC,IAAD,CACElB,UAAU,yBACVC,MAAO,CAAEiB,OAAQ,WACjBN,QAAS,kBAAM0H,EAAK,WAEtB,cAAC,IAAD,CACEtI,UAAU,yBACVC,MAAO,CAAEiB,OAAQ,WACjBN,QAAS,kBAAM0H,EAAK,cAEtB,cAAC,IAAD,CACEtI,UAAU,yBACVC,MAAO,CAAEiB,OAAQ,WACjBN,QAAS,kBAAM0H,EAAK,iBAO/BR,GACC,cAAC2B,EAAA,EAAD,CACEtI,MAAM,cACNwI,QAAQ,EACRD,YACE,iCACE,kHAIA,+BACE,kIAIA,gHAIA,0GAIA,0GAIA,iFACkD,IAChD,cAAC,IAAD,CAAMhD,GAAG,eAAT,yBAFF,aAONkD,QAAQ,EAjCV,SAmCE,qBACE5J,UAAU,iCACVY,QAAS,WAjInBmH,GAAqB,GACrBhF,aAAasD,QAAQ,8BAA8B,GAkIvC1C,YAAI,uBAAwB,gBAJhC","file":"static/js/6.6da40f25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ReactComponent as WarningSVG } from \"../../assets/global/warning.svg\";\r\n\r\nconst NoMobileOptimization = (props) => {\r\n  return (\r\n    <div\r\n      className=\"show-on-mobile\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          fontSize: \"1.5rem\",\r\n          lineHeight: \"normal\",\r\n          color: \"var(--text-faded)\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <WarningSVG style={{ verticalAlign: \"top\" }} />\r\n        This page is not optimized for mobile browsing.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMobileOptimization;\r\n","import React from \"react\";\r\nimport { ReactComponent as CloseSVG } from \"../../assets/global/close.svg\";\r\n\r\nconst YesNoModal = (props) => {\r\n  return (\r\n    <div className=\"absolute-center\">\r\n      <div className=\"overlay\" onClick={() => props.close()} />\r\n      <div\r\n        className=\"popup-message fullscreen\"\r\n        style={{ width: \"600px\", maxWidth: \"90%\" }}\r\n      >\r\n        <CloseSVG\r\n          className=\"link-icon should-invert\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"5px\",\r\n            right: \"5px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => props.close()}\r\n        />\r\n        <h3>{props.title || \"\"}</h3>\r\n        {props.message && (\r\n          <span style={{ fontSize: \"1.3rem\" }}>{props.message}</span>\r\n        )}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            gap: \"10px\",\r\n          }}\r\n        >\r\n          <div\r\n            className={\"primary-button should-invert\"}\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              minWidth: \"100px\",\r\n              textAlign: \"center\",\r\n              marginTop: \"10px\",\r\n            }}\r\n            onClick={() => props.yes()}\r\n          >\r\n            Yes\r\n          </div>\r\n          <div\r\n            className={\"primary-button should-invert\"}\r\n            style={{\r\n              // marginLeft: \"auto\",\r\n              minWidth: \"100px\",\r\n              textAlign: \"center\",\r\n              marginTop: \"10px\",\r\n            }}\r\n            onClick={() => props.no()}\r\n          >\r\n            No\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YesNoModal;\r\n","import React from \"react\";\r\nimport { Post } from \"../../services/DataLoader\";\r\nimport { ReactComponent as RefreshSVG } from \"../../assets/global/refresh.svg\";\r\nimport { ReactComponent as DeleteSVG } from \"../../assets/global/delete.svg\";\r\nimport PageMessage from \"../global/PageMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport { Log } from \"../../services/CommunicationService\";\r\nimport YesNoModal from \"../global/YesNoModal\";\r\n\r\nconst TimerList = () => {\r\n  const [characterIds, setCharacterIds] = React.useState(null);\r\n  const [characters, setCharacters] = React.useState();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [showFailedToFetchError, setShowFailedToFetchError] =\r\n    React.useState(false);\r\n  const [showYesNoModal, setShowYesNoModal] = React.useState(false);\r\n  const [selectedTimerId, setSelectedTimerId] = React.useState(-1);\r\n  const [hiddenTimerIds, setHiddenTimerIds] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let characterIds = JSON.parse(\r\n      localStorage.getItem(\"registered-characters\") || \"[]\"\r\n    );\r\n    setCharacterIds(characterIds || []);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (characterIds) {\r\n      fetchCharacterData();\r\n    }\r\n  }, [characterIds]);\r\n\r\n  React.useEffect(() => {\r\n    if (hiddenTimerIds && characters) {\r\n      appendRaidActivity(characters);\r\n    }\r\n  }, [hiddenTimerIds]);\r\n\r\n  const refreshButtonAngleRef = React.useRef(null);\r\n  function refreshButtonHandler() {\r\n    refreshButtonAngleRef.current += 360;\r\n    $(`.character-refresh-button`).css({\r\n      transform: `rotate(${refreshButtonAngleRef.current}deg)`,\r\n    });\r\n  }\r\n\r\n  function fetchCharacterData() {\r\n    if (!characterIds || characterIds.length === 0) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    Post(\r\n      \"https://api.ddoaudit.com/players/lookup\",\r\n      { playerids: characterIds },\r\n      10000\r\n    )\r\n      .then((response) => {\r\n        if (response.error) {\r\n          setLoading(false);\r\n          setShowFailedToFetchError(true);\r\n          Log(\"Failed to fetch characters\", `${response.error || \"No error\"}`);\r\n        } else {\r\n          setCharacters(response);\r\n          appendRaidActivity(response);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setShowFailedToFetchError(true);\r\n        Log(\"Failed to fetch characters\", \"Timeout\");\r\n      });\r\n  }\r\n\r\n  function appendRaidActivity(characters) {\r\n    if (characters == null) {\r\n      setCharacters([]);\r\n    }\r\n    let returnedCharacters = [];\r\n    let lookups = [];\r\n    characters.forEach((character) => {\r\n      lookups.push(\r\n        Post(\r\n          \"https://api.ddoaudit.com/players/raidactivity\",\r\n          { playerid: character.PlayerId },\r\n          10000\r\n        )\r\n          .then((res) => {\r\n            returnedCharacters.push({\r\n              ...character,\r\n              RaidActivity: res,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            setShowFailedToFetchError(true);\r\n            returnedCharacters.push(characters);\r\n            Log(\"Failed to fetch raid timers\", `Timeout for ${character.Name}`);\r\n          })\r\n      );\r\n    });\r\n\r\n    if (lookups.length !== 0) {\r\n      Promise.all(lookups).then(() => {\r\n        // remove raids that are off timer (negative)\r\n        returnedCharacters.forEach((character) => {\r\n          character.RaidActivity = character.RaidActivity.filter(\r\n            (raid) => raid.remaining > 0\r\n          );\r\n        });\r\n\r\n        // remove the first instance of duplicate raids\r\n        returnedCharacters.forEach((character) => {\r\n          character.RaidActivity.sort((a, b) => a.remaining - b.remaining);\r\n          let raids = [];\r\n          for (let i = character.RaidActivity.length - 1; i >= 0; i--) {\r\n            if (raids.includes(character.RaidActivity[i].name)) {\r\n              character.RaidActivity = character.RaidActivity.filter(\r\n                (_, index) => i != index\r\n              );\r\n            } else {\r\n              raids.push(character.RaidActivity[i].name);\r\n            }\r\n          }\r\n        });\r\n\r\n        // remove raids hidden by the user\r\n        returnedCharacters.forEach((character) => {\r\n          character.RaidActivity = character.RaidActivity.filter(\r\n            (raid) => !hiddenTimerIds.includes(raid.id)\r\n          );\r\n        });\r\n\r\n        returnedCharacters.sort(\r\n          (a, b) => b.RaidActivity?.length - a.RaidActivity?.length\r\n        );\r\n        setCharacters(returnedCharacters);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  function getTimeTillEnd(raid) {\r\n    // prettier-ignore\r\n    let remainingMinutes = raid.remaining;\r\n    const timeInDays = Math.floor(remainingMinutes / (60 * 60 * 24));\r\n    remainingMinutes = remainingMinutes % (60 * 60 * 24);\r\n    const timeInHours = Math.floor(remainingMinutes / (60 * 60));\r\n    remainingMinutes = remainingMinutes % (60 * 60);\r\n    const timeInMinutes = Math.floor(remainingMinutes / 60);\r\n    let returnStringArray = [];\r\n    if (timeInDays != 0) {\r\n      returnStringArray.push(`${timeInDays} day${timeInDays != 1 ? \"s\" : \"\"}`);\r\n    }\r\n    if (timeInHours != 0) {\r\n      returnStringArray.push(\r\n        `${timeInHours} hour${timeInHours != 1 ? \"s\" : \"\"}`\r\n      );\r\n    }\r\n    if (timeInMinutes != 0) {\r\n      returnStringArray.push(\r\n        `${timeInMinutes} minute${timeInMinutes != 1 ? \"s\" : \"\"}`\r\n      );\r\n    }\r\n\r\n    return returnStringArray.join(\", \");\r\n  }\r\n\r\n  function removeRaidTimer() {\r\n    if (selectedTimerId != null) {\r\n      const hiddenTimerIds = JSON.parse(\r\n        localStorage.getItem(\"hidden-raid-timer-ids\") || \"[]\"\r\n      );\r\n      hiddenTimerIds.push(selectedTimerId);\r\n      localStorage.setItem(\r\n        \"hidden-raid-timer-ids\",\r\n        JSON.stringify(hiddenTimerIds || [])\r\n      );\r\n      setHiddenTimerIds(hiddenTimerIds);\r\n    }\r\n    setShowYesNoModal(false);\r\n    setSelectedTimerId(null);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const hiddenTimerIds = JSON.parse(\r\n      localStorage.getItem(\"hidden-raid-timer-ids\") || \"[]\"\r\n    );\r\n    setHiddenTimerIds(hiddenTimerIds);\r\n\r\n    $(document).on(\"keydown.handleEscape\", function (e) {\r\n      if (e.key === \"Escape\") {\r\n        setShowYesNoModal(false);\r\n      }\r\n    });\r\n\r\n    return () => $(document).unbind(\"keydown.handleEscape\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {showYesNoModal && (\r\n        <YesNoModal\r\n          title=\"Remove this raid timer?\"\r\n          message=\"This will hide the current timer.\"\r\n          yes={() => removeRaidTimer()}\r\n          no={() => setShowYesNoModal(false)}\r\n          close={() => setShowYesNoModal(false)}\r\n        />\r\n      )}\r\n      {showFailedToFetchError && (\r\n        <PageMessage\r\n          type=\"error\"\r\n          title=\"Failed to fetch character data\"\r\n          message={\r\n            <>\r\n              Please try again later. If the error persists, try clearing your\r\n              browser cookies or let me know of the problem via the{\" \"}\r\n              <Link to=\"/suggestions\">Suggestions page</Link>.\r\n            </>\r\n          }\r\n          submessage=\"Reason: the server took too long to respond\"\r\n          fontSize={1.3}\r\n          pushBottom={true}\r\n        />\r\n      )}\r\n      {!loading &&\r\n        !showFailedToFetchError &&\r\n        (!characterIds || characterIds.length == 0) && (\r\n          <PageMessage\r\n            type=\"info\"\r\n            title=\"No registered characters\"\r\n            message={\r\n              <>\r\n                You need to add a character to track raid timers. Please click\r\n                the button below.\r\n              </>\r\n            }\r\n            fontSize={1.3}\r\n            pushBottom={true}\r\n          />\r\n        )}\r\n      {characters &&\r\n        characters.map((character, i) => (\r\n          <div key={i}>\r\n            {character && (\r\n              <>\r\n                <div style={{ padding: \"10px 0px\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <h4\r\n                      style={{\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                    >\r\n                      {character.Name}{\" \"}\r\n                      <span\r\n                        style={{\r\n                          color: \"var(--text-faded)\",\r\n                        }}\r\n                      >\r\n                        | {character.Server}\r\n                      </span>\r\n                    </h4>\r\n                    <RefreshSVG\r\n                      className=\"nav-icon should-invert character-refresh-button\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        refreshButtonHandler();\r\n                        fetchCharacterData();\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {!character.RaidActivity && (\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"1.3rem\",\r\n                        color: \"var(--text-faded)\",\r\n                      }}\r\n                    >\r\n                      {showFailedToFetchError ? \"Failed to load\" : \"Loading...\"}\r\n                    </span>\r\n                  )}\r\n                  {character.RaidActivity &&\r\n                    character.RaidActivity.length == 0 && (\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"1.3rem\",\r\n                          color: \"var(--text-faded)\",\r\n                        }}\r\n                      >\r\n                        No raid timers on record\r\n                      </span>\r\n                    )}\r\n                  {character.RaidActivity &&\r\n                    character.RaidActivity.length > 0 && (\r\n                      <table\r\n                        className=\"character-table\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                        }}\r\n                      >\r\n                        <thead>\r\n                          <tr\r\n                            style={{\r\n                              color: \"var(--text-faded)\",\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"1.2rem\",\r\n                              lineHeight: \"15px\",\r\n                            }}\r\n                          >\r\n                            <th\r\n                              style={{\r\n                                width: \"30%\",\r\n                              }}\r\n                            >\r\n                              Raid\r\n                            </th>\r\n                            <th\r\n                              style={{\r\n                                width: \"65%\",\r\n                              }}\r\n                            >\r\n                              Timer\r\n                            </th>\r\n                            <th\r\n                              style={{\r\n                                width: \"5%\",\r\n                              }}\r\n                            >\r\n                              Remove\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {character.RaidActivity.map((raid, ri) => (\r\n                            <tr\r\n                              key={ri}\r\n                              style={{\r\n                                fontSize: \"1.3rem\",\r\n                              }}\r\n                            >\r\n                              <td className=\"lfm-number\">{raid.name}</td>\r\n                              <td>{getTimeTillEnd(raid)}</td>\r\n                              <td>\r\n                                <DeleteSVG\r\n                                  className=\"fading-icon\"\r\n                                  onClick={() => {\r\n                                    setShowYesNoModal(true);\r\n                                    setSelectedTimerId(raid.id);\r\n                                  }}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    )}\r\n                </div>\r\n              </>\r\n            )}\r\n            <hr\r\n              style={{\r\n                backgroundColor: \"var(--text)\",\r\n                opacity: 0.2,\r\n                margin: \"5px 3px\",\r\n              }}\r\n            />\r\n            {i == characters.length - 1 && <div style={{ height: \"20px\" }} />}\r\n          </div>\r\n        ))}\r\n      {loading && characters == null && (\r\n        <div\r\n          style={{\r\n            minHeight: \"150px\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <span style={{ textAlign: \"center\", fontSize: \"1.5rem\" }}>\r\n            Loading...\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimerList;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Log } from \"../../services/CommunicationService\";\r\nimport Banner from \"../global/Banner\";\r\nimport { ReactComponent as ThumbsDownSVG } from \"../../assets/global/thumbs_down.svg\";\r\nimport { ReactComponent as ThumbsUpSVG } from \"../../assets/global/thumbs_up.svg\";\r\nimport { ReactComponent as CloseSVG } from \"../../assets/global/close.svg\";\r\nimport BannerMessage from \"../global/BannerMessage\";\r\nimport ContentCluster from \"../global/ContentCluster\";\r\nimport NoMobileOptimization from \"../global/NoMobileOptimization\";\r\nimport { Submit } from \"../../services/CommunicationService\";\r\nimport TimerList from \"./TimerList\";\r\nimport DataClassification from \"../global/DataClassification\";\r\n\r\nconst Timers = (props) => {\r\n  const TITLE = \"Raid Timers\";\r\n  const [disclaimerVisible, setDisclaimerVisible] = React.useState(false);\r\n  const [mayVote, setMayVote] = React.useState(false);\r\n  const [hasVoted, setHasVoted] = React.useState(false);\r\n  const [voteResponse, setVoteResponse] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"hide-raid-timer-disclaimer\")) {\r\n      setDisclaimerVisible(false);\r\n    } else {\r\n      setDisclaimerVisible(true);\r\n    }\r\n\r\n    let ls = localStorage.getItem(\"feature-vote-raid-timers\");\r\n    let registeredCharacters = JSON.parse(\r\n      localStorage.getItem(\"registered-characters\") || \"[]\"\r\n    );\r\n    if (registeredCharacters.length > 0 && ls == null) {\r\n      setMayVote(true);\r\n    }\r\n  }, []);\r\n\r\n  function vote(response) {\r\n    if (response != null) {\r\n      Submit(\"Feature: Raid Timers\", response);\r\n      if (response === \"Like\") {\r\n        setVoteResponse(\"positive\");\r\n      } else {\r\n        setVoteResponse(\"negative\");\r\n      }\r\n    } else {\r\n      setVoteResponse(\"close\");\r\n      setMayVote(false);\r\n    }\r\n    setHasVoted(true);\r\n    localStorage.setItem(\"feature-vote-raid-timers\", new Date());\r\n  }\r\n\r\n  function dismissDisclaimer() {\r\n    setDisclaimerVisible(false);\r\n    localStorage.setItem(\"hide-raid-timer-disclaimer\", true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{TITLE}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Check raid timers for all of your characters before you log in!\"\r\n        />\r\n        <meta\r\n          property=\"og:image\"\r\n          content=\"/icons/logo-512px.png\"\r\n          data-react-helmet=\"true\"\r\n        />\r\n        <meta\r\n          property=\"twitter:image\"\r\n          content=\"/icons/logo-512px.png\"\r\n          data-react-helmet=\"true\"\r\n        />\r\n      </Helmet>\r\n      <Banner\r\n        small={true}\r\n        showTitle={true}\r\n        showSubtitle={true}\r\n        showButtons={false}\r\n        hideOnMobile={true}\r\n        hideVote={true}\r\n        title=\"Raid Timers\"\r\n        subtitle=\"Check Raid Timers\"\r\n      />\r\n      <div className=\"content-container\">\r\n        <BannerMessage page=\"timers\" />\r\n        <DataClassification classification=\"inferred\" />\r\n        <div className=\"top-content-padding-small shrink-on-mobile\" />\r\n        <NoMobileOptimization />\r\n        <ContentCluster\r\n          title=\"Raid Timers\"\r\n          description=\"View your characters' current raid timers based on questing activity.\"\r\n        >\r\n          <TimerList />\r\n          <div style={{ display: \"flex\" }}>\r\n            <Link className=\"primary-button should-invert\" to=\"/registration\">\r\n              Manage characters\r\n            </Link>\r\n          </div>\r\n          {mayVote && (\r\n            <div\r\n              className=\"feature-vote-container\"\r\n              style={{ opacity: hasVoted ? 1 : \"\" }}\r\n            >\r\n              {hasVoted ? (\r\n                <>\r\n                  <span style={{ cursor: \"default\" }}>\r\n                    {voteResponse === \"positive\" ? (\r\n                      \"That's great to hear! Thanks.\"\r\n                    ) : (\r\n                      <>\r\n                        Have a moment to{\" \"}\r\n                        <Link to=\"/suggestions\">suggest an improvement</Link>?\r\n                      </>\r\n                    )}\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span style={{ cursor: \"default\" }}>\r\n                    Is this feature useful?\r\n                  </span>\r\n                  <ThumbsUpSVG\r\n                    className=\"nav-icon should-invert\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => vote(\"Like\")}\r\n                  />\r\n                  <ThumbsDownSVG\r\n                    className=\"nav-icon should-invert\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => vote(\"Dislike\")}\r\n                  />\r\n                  <CloseSVG\r\n                    className=\"nav-icon should-invert\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => vote(null)}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </ContentCluster>\r\n        {disclaimerVisible && (\r\n          <ContentCluster\r\n            title=\"Please Note\"\r\n            noLink={true}\r\n            description={\r\n              <span>\r\n                <p>\r\n                  The raid timers displayed here are estimates and come with the\r\n                  following caveats:\r\n                </p>\r\n                <ul>\r\n                  <li>\r\n                    The timer begins the moment your character leaves a raid,\r\n                    whether or not the raid was completed.\r\n                  </li>\r\n                  <li>\r\n                    The timer starts even if you forget to claim your reward\r\n                    from the quest giver.\r\n                  </li>\r\n                  <li>\r\n                    There is no way to account for the use of Raid Timer Bypass\r\n                    Hourglasses.\r\n                  </li>\r\n                  <li>\r\n                    There is no distinction between legendary and heroic\r\n                    versions of a raid.\r\n                  </li>\r\n                  <li>\r\n                    Some raids may not be tracked. If you find one,{\" \"}\r\n                    <Link to=\"/suggestions\">let me know</Link>.\r\n                  </li>\r\n                </ul>\r\n              </span>\r\n            }\r\n            noFade={true}\r\n          >\r\n            <div\r\n              className=\"secondary-button should-invert\"\r\n              onClick={() => {\r\n                dismissDisclaimer();\r\n                Log(\"Dismissed disclaimer\", \"Raid timers\");\r\n              }}\r\n            >\r\n              Dismiss\r\n            </div>\r\n          </ContentCluster>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timers;\r\n"],"sourceRoot":""}